<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jetm="http://jetm.void.fm/schema/jetm_spring_config_1_2"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://jetm.void.fm/schema/jetm_spring_config_1_2 http://jetm.void.fm/schema/jetm_spring_config_1_2.xsd">
       
    <jetm:runtime />
     
    <jetm:monitoring>  
    	<jetm:bean-pattern>
    		*Service,*Dao    		  		
    	</jetm:bean-pattern>  		
	</jetm:monitoring> 	
  	
  	<!--
  	
  		Here are Sunâ€™s rules for thread creation in simple terms:

		If the number of threads is less than the corePoolSize, create a new Thread to run a new task.
		If the number of threads is equal (or greater than) the corePoolSize, put the task into the queue.
		If the queue is full, and the number of threads is less than the maxPoolSize, create a new thread to run tasks in.
		If the queue is full, and the number of threads is greater than or equal to maxPoolSize, reject the task.
		 
  	 -->
  	   	    
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
  		<property name="basenames">
   			<list>  
   				<value>de.msk.mylivetracker.messages.mlt-exception</value>
   				<value>de.msk.mylivetracker.messages.spring</value>
   				<value>de.msk.mylivetracker.messages.calendar</value>
   				<value>de.msk.mylivetracker.messages.common-options</value>
   				<value>de.msk.mylivetracker.messages.layout</value>
   				<value>de.msk.mylivetracker.messages.login</value>
   				<value>de.msk.mylivetracker.messages.tracks-overview</value>
   				<value>de.msk.mylivetracker.messages.track-as-map</value>
    			<value>de.msk.mylivetracker.messages.track-as-status-info</value>
    			<value>de.msk.mylivetracker.messages.options</value>
    			<value>de.msk.mylivetracker.messages.master-data</value>
    			<value>de.msk.mylivetracker.messages.auto-login</value>    			    			
    			<value>de.msk.mylivetracker.messages.sender-maintenance</value>
    			<value>de.msk.mylivetracker.messages.sender-symbols</value>
    			<value>de.msk.mylivetracker.messages.status-page</value>
    			<value>de.msk.mylivetracker.messages.emergency</value>
    			<value>de.msk.mylivetracker.messages.server-info</value>
    			<value>de.msk.mylivetracker.messages.google-kml</value>    			
    			<value>de.msk.mylivetracker.messages.sms-templates</value>
    			<value>de.msk.mylivetracker.messages.format-utils</value>
    			<value>de.msk.mylivetracker.messages.map</value>
   			</list>
  		</property>
 	</bean>
 	
 	<bean id="localeResolver"
       class="de.msk.mylivetracker.web.util.UsersLocaleResolver">    
    </bean>   
    
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
  		<property name="configLocation">
    		<value>classpath:ehcache.xml</value>
  		</property>
	</bean>

	<bean id="applicationCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	  	<property name="cacheManager">
	    	<ref local="cacheManager"/>
	  	</property>
	  	<property name="cacheName">
	    	<value>de.msk.mylivetracker.APPLICATION_CACHE</value>
	  	</property>
	</bean>	
	
	<bean id="userWithoutRoleCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	  	<property name="cacheManager">
	    	<ref local="cacheManager"/>
	  	</property>
	  	<property name="cacheName">
	    	<value>de.msk.mylivetracker.USER_WITHOUT_ROLE_CACHE</value>
	  	</property>
	</bean>	
		
	<bean id="senderCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	  	<property name="cacheManager">
	    	<ref local="cacheManager"/>
	  	</property>
	  	<property name="cacheName">
	    	<value>de.msk.mylivetracker.SENDER_CACHE</value>
	  	</property>
	</bean>	
		
	<bean id="ticketCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	  	<property name="cacheManager">
	    	<ref local="cacheManager"/>
	  	</property>
	  	<property name="cacheName">
	    	<value>de.msk.mylivetracker.TICKET_CACHE</value>
	  	</property>
	</bean>	
		
	<bean id="dataSourceMyLiveTracker" 
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/MyLiveTrackerDb</value>
		</property>
	</bean>	
    
    <bean id="dataSourceMyLiveTrackerStatistics" 
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/MyLiveTrackerDb</value>
		</property>
	</bean>
	
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceMyLiveTracker" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManagerStatistics"/>
    <bean id="transactionManagerStatistics"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceMyLiveTrackerStatistics" />
	</bean>
	
    <bean id="sqlMapMyLiveTracker"
    	class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation">
            <value>classpath:mylivetracker-sql-map-config.xml</value>
        </property>
        <property name="dataSource" ref="dataSourceMyLiveTracker" />
    </bean>               
   
   	<bean id="sqlMapMyLiveTrackerStatistics"
    	class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation">
            <value>classpath:mylivetracker-statistics-sql-map-config.xml</value>
        </property>
        <property name="dataSource" ref="dataSourceMyLiveTrackerStatistics" />
    </bean>
    
    <bean id="statisticsDao"
        class="de.msk.mylivetracker.dao.statistics.StatisticsDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTrackerStatistics" />
    </bean>
         
    <bean id="applicationDao"
        class="de.msk.mylivetracker.dao.ApplicationDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
    </bean>
    
    <bean id="userSessionStatusDao"
        class="de.msk.mylivetracker.dao.UserSessionStatusDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
    </bean>
    
    <bean id="userOperationsCounterDao"
        class="de.msk.mylivetracker.dao.UserOperationsCounterDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
    </bean>
    
    <bean id="userDao"
        class="de.msk.mylivetracker.dao.UserDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
        <property name="messageSource" ref="messageSource" />   
        <property name="passwordEncoder" ref="passwordEncoder" />   
        <property name="statusParamsService" ref="statusParamsService" />          
        <property name="applicationService" ref="applicationService" />
    </bean>                      
        
    <bean id="trackDao"
        class="de.msk.mylivetracker.dao.TrackDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />                
    </bean>
    
    <bean id="senderDao"
        class="de.msk.mylivetracker.dao.SenderDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
    </bean>                  
    
    <bean id="statusParamsDao"
        class="de.msk.mylivetracker.dao.StatusParamsDao">
        <property name="sqlMapClient" ref="sqlMapMyLiveTracker" />
    </bean>  

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      	<property name="host" value="smtp.inetmx.de"/>
   	</bean>
   	       
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      	<property name="velocityProperties">
        	<value>
            	resource.loader=class
            	class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
         	</value>
      	</property>
   	</bean>
   
	<bean id="adminService"
        class="de.msk.mylivetracker.service.admin.AdminService">
      	<property name="applicationService" ref="applicationService" />
      	<property name="userService" ref="userService" />
        <property name="javaMailSender" ref="javaMailSender" />
        <property name="velocityEngine" ref="velocityEngine" />
        <property name="emailAddressFrom" value="support@mylivetracker.de" />
        <property name="registrationEmailTemplateDe" value="de/msk/mylivetracker/service/admin/email/templates/registration-email-template-de.vm" />
        <property name="registrationEmailTemplateEn" value="de/msk/mylivetracker/service/admin/email/templates/registration-email-template-en.vm" />        
    </bean>
    
    <bean id="applicationService"
        class="de.msk.mylivetracker.service.application.ApplicationService"
        init-method="loadParameters">
        <property name="applicationDao" ref="applicationDao" />
        <property name="applicationCache" ref="applicationCache" />        
    </bean>
           
    <bean id="ticketService"
        class="de.msk.mylivetracker.service.ticket.TicketService">
        <property name="ticketCache" ref="ticketCache" />        
    </bean>
            
	<bean id="statisticsLimits"
        class="de.msk.mylivetracker.service.statistics.StatisticsLimits">               
        <property name="maxStatAppStartUp" value="100" />
        <property name="maxStatServiceCall" value="500" />
        <property name="maxStatSmsTransport" value="100" />
        <property name="maxStatStorePosProcInfo" value="500" />
        <property name="maxStatStorePosProcError" value="500" />
        <property name="maxStatUplDataProc" value="100000" />
        <property name="maxStatUploaderServerStatus" value="500" />
    </bean>
    
    <bean id="statisticsService"
        class="de.msk.mylivetracker.service.statistics.StatisticsService">  
        <property name="applicationService" ref="applicationService" />
        <property name="statisticsDao" ref="statisticsDao" />
        <property name="statisticsLimits" ref="statisticsLimits" />
    </bean>    
    
    <bean id="userSessionStatusService"
        class="de.msk.mylivetracker.service.user.UserSessionStatusService">
        <property name="senderService" ref="senderService" />
        <property name="liveTrackingOptsKeepRecentPos" ref="liveTrackingOptsKeepRecentPos" />
		<property name="liveTrackingOptsUpdateInterval" ref="liveTrackingOptsUpdateInterval" />
		<property name="tracksOverviewOptsDatePeriod" ref="tracksOverviewOptsDatePeriod"/>
		<property name="tracksOverviewOptsRefresh" ref="tracksOverviewOptsRefresh" />
        <property name="userSessionStatusDao" ref="userSessionStatusDao" />
    </bean>
    
    <bean id="userOperationsCounterService"
        class="de.msk.mylivetracker.service.user.UserOperationsCounterService">
        <property name="userOperationsCounterDao" ref="userOperationsCounterDao" />
    </bean>
      
    <bean id="userService"
        class="de.msk.mylivetracker.service.user.UserService">
        <property name="userWithoutRoleCache" ref="userWithoutRoleCache" />
        <property name="applicationService" ref="applicationService" />        
        <property name="senderService" ref="senderService" />
        <property name="userDao" ref="userDao" />                        
    </bean>
    
    <bean id="geocodingService"
        class="de.msk.mylivetracker.service.geocoding.nominatim.NominatimGeocodingService">
        <property name="name" value="Nominatim Geocoder" />
        <property name="requestLimit" value="50000" />        
        <property name="applicationService" ref="applicationService" />
        <property name="statisticsService" ref="statisticsService" />        
    </bean> 
    
  	<bean id="statusParamsService"
        class="de.msk.mylivetracker.service.statusparams.StatusParamsService">        
        <property name="statusParamsDao" ref="statusParamsDao" />
    </bean>   
    
    <bean id="mobileNetworkService"
        class="de.msk.mylivetracker.service.mobilenetwork.MobileNetworkService">                
    </bean> 
    
    <bean id="smsService"
        class="de.msk.mylivetracker.service.sms.SmsService">        
        <property name="minPauseInMSecsForUserBetweenTwoSmsSent" value="300000" />
        <property name="applicationService" ref="applicationService" />
        <property name="userService" ref="userService" />
        <property name="messageSource" ref="messageSource" />
        <property name="statisticsService" ref="statisticsService" />  
    </bean> 
    
    <bean id="utilTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
  		<property name="corePoolSize" value="30" />
  		<property name="maxPoolSize" value="30" />
  		<property name="queueCapacity" value="30" />
	</bean>
	
	<bean id="utilService" init-method="start"
        class="de.msk.mylivetracker.service.util.UtilService">     
        <property name="utilTaskExecutor" ref="utilTaskExecutor" />   
        <property name="applicationService" ref="applicationService" />
	 	<property name="statisticsService" ref="statisticsService" />
	 	<property name="trackService" ref="trackService" />
    </bean>
                
    <bean id="storePositionTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
  		<property name="corePoolSize" value="50" />
  		<property name="maxPoolSize" value="50" />
  		<property name="queueCapacity" value="50" />
	</bean>
	                                    
    <bean id="userStorePositionQueues"
    	class="de.msk.mylivetracker.service.track.UserStorePositionQueues">
    	<property name="trackDao" ref="trackDao" />
    	<property name="geocodingService" ref="geocodingService" />
    	<property name="senderService" ref="senderService" />
    	<property name="smsService" ref="smsService" />    	
    	<property name="storePositionTaskExecutor" ref="storePositionTaskExecutor" />
    	<property name="maxNumberOfRetriesOnDataAccessException" value="5" />
    	<property name="pauseBeforeRetryOfStorePositionInMSecs" value="500" />        	
    	<property name="queueTimeoutInSecs" value="600" />
    	<property name="queuePollIntervalInMSecs" value="500" />    
    	<property name="statisticsService" ref="statisticsService" />	
    </bean>                                    	
    
    <bean id="trackService"
        class="de.msk.mylivetracker.service.track.TrackService">        
        <property name="trackDao" ref="trackDao" />
        <property name="userStorePositionQueues" ref="userStorePositionQueues" />
        <property name="userOperationsCounterService" ref="userOperationsCounterService" />
    </bean> 
      
    <bean id="senderService"
        class="de.msk.mylivetracker.service.sender.SenderService">
        <property name="senderCache" ref="senderCache" />
        <property name="senderDao" ref="senderDao" />
    </bean>  
    
    <bean id="services" 
		class="de.msk.mylivetracker.service.Services" lazy-init="false">
        <property name="adminService" ref="adminService" />
		<property name="applicationService" ref="applicationService" />
		<property name="demoService" ref="demoService" />
		<property name="geocodingService" ref="geocodingService" />	
		<property name="mobileNetworkService" ref="mobileNetworkService" />
		<property name="rpcService" ref="rpcService" />
		<property name="senderService" ref="senderService" />
		<property name="smsService" ref="smsService" />
	 	<property name="statisticsService" ref="statisticsService" />
		<property name="statusParamsService" ref="statusParamsService" />
 		<property name="ticketService" ref="ticketService" />  
	 	<property name="trackService" ref="trackService" />
	 	<property name="userService" ref="userService" />
        <property name="userSessionStatusService" ref="userSessionStatusService" />
        <property name="userOperationsCounterService" ref="userOperationsCounterService" />
        <property name="utilService" ref="utilService" />
	</bean>        
</beans>
