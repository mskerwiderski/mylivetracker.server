<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="Statistics">  	
	<typeAlias alias="dateTime" type="de.msk.mylivetracker.commons.util.datetime.DateTime"/>
	<typeAlias alias="applicationStartUpVo" 
		type="de.msk.mylivetracker.domain.statistics.ApplicationStartUpVo"/>
	<typeAlias alias="uploaderServerStatusVo" 
		type="de.msk.mylivetracker.domain.statistics.UploaderServerStatusVo"/>	
	<typeAlias alias="uploadedDataProcessVo" 
		type="de.msk.mylivetracker.domain.statistics.UploadedDataProcessVo"/>
	<typeAlias alias="serviceCallVo" 
		type="de.msk.mylivetracker.domain.statistics.ServiceCallVo"/>
	<typeAlias alias="storePositionProcessorInfoVo" 
		type="de.msk.mylivetracker.domain.statistics.StorePositionProcessorInfoVo"/>
	<typeAlias alias="storePositionProcessorErrorVo" 
		type="de.msk.mylivetracker.domain.statistics.StorePositionProcessorErrorVo"/>		
    <typeAlias alias="smsTransportVo" 
		type="de.msk.mylivetracker.domain.statistics.SmsTransportVo"/>
		
	<resultMap id="applicationStartUpResult" class="applicationStartUpVo" >
		<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="version" column="VERSION" />										
    </resultMap> 
        	
    <resultMap id="uploaderServerStatusResult" class="uploaderServerStatusVo" >
		<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="serverName" column="SERVER_NAME" />										
		<result property="serverPort" column="SERVER_PORT" />		
		<result property="serverProtocol" column="SERVER_PROTOCOL" />
		<result property="status" column="STATUS" />
		<result property="started" column="STARTED" />
		<result property="optionDoReadLine" column="OPT_DO_READ_LINE" />
		<result property="optionMultipleRecordsPerReception" column="OPT_MULTIPLE_RECORDS_PER_RECEPTION" />
		<result property="optionSocketReadTimeoutInMSecs" column="OPT_SOCKET_READ_TIMEOUT_IN_MSECS" />
		<result property="optionMaxDataStrLengthInBytes" column="OPT_MAX_DATA_STR_LENGTH_IN_BYTES" />
		<result property="optionConnectionTimeoutInMSecs" column="OPT_CONNECTION_TIMEOUT_IN_MSECS" />
    </resultMap>
        	
    <resultMap id="uploadedDataProcessResult" class="uploadedDataProcessVo" >
    	<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="protocol" column="PROTOCOL" />
		<result property="remoteIpAddress" column="REMOTE_IP_ADDRESS" />
		<result property="remoteHost" column="REMOTE_HOST" />
		<result property="remotePort" column="REMOTE_PORT" />
		<result property="server" column="SERVER" />		
		<result property="serverPort" column="SERVER_PORT" />
		<result property="processor" column="PROCESSOR" />
		<result property="interpreter" column="INTERPRETER" />
		<result property="interpreterVersion" column="INTERPRETER_VERSION" />
		<result property="senderId" column="SENDER_ID" />
		<result property="itemNumber" column="ITEM_NUMBER" />
		<result property="dataStr" column="DATA_STR" />		
		<result property="addInfo" column="ADD_INFO" />
		<result property="responseStr" column="RESPONSE_STR" />
		<result property="connectionStatus" column="CONNECTION_STATUS" />
    </resultMap> 
    
    <resultMap id="serviceCallResult" class="serviceCallVo" >
    	<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="service" column="SERVICE" />
		<result property="date" column="DATE" />				
		<result property="url" column="URL" />
		<result property="result" column="RESULT" />
    </resultMap> 
    
    <resultMap id="storePositionProcessorInfoResult" class="storePositionProcessorInfoVo" >
    	<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="senderId" column="SENDER_ID" />
		<result property="started" column="STARTED" />				
		<result property="updated" column="UPDATED" />
		<result property="processedPositions" column="PROCESSED_POSITIONS" />
		<result property="skippedPositions" column="SKIPPED_POSITIONS" />
		<result property="errorCount" column="ERROR_COUNT" />
		<result property="retryCount" column="RETRY_COUNT" />
		<result property="maxNumberOfRetriesOccurred" column="MAX_NUMBER_OF_RETRIES_OCCURRED" />
		<result property="lastErrorMsg" column="LAST_ERROR_MSG" />
		<result property="lastErrorOccurred" column="LAST_ERROR_OCCURRED" />
		<result property="lastStatus" column="LAST_STATUS" />		
		<result property="reasonStopped" column="REASON_STOPPED" />
    </resultMap>
    
    <resultMap id="storePositionProcessorErrorResult" class="storePositionProcessorErrorVo" >
    	<result property="logId" column="LOG_ID" />
		<result property="logTimestamp" column="LOG_TIMESTAMP" />
		<result property="userId" column="USER_ID" />
		<result property="senderId" column="SENDER_ID" />
		<result property="positionId" column="POSITION_ID" />
		<result property="retry" column="RETRY" />
		<result property="error" column="ERROR" />
		<result property="positionDump" column="POSITION_DUMP" />
		<result property="mobNwCellDump" column="MOB_NW_CELL_DUMP" />
		<result property="messageDump" column="MESSAGE_DUMP" />
		<result property="senderStateDump" column="SENDER_STATE_DUMP" />
		<result property="cardiacFunctionDump" column="CARDIAC_FUNCTION_DUMP" />
		<result property="emergencySignalDump" column="EMERGENCY_SIGNAL_DUMP" />
		<result property="clientInfoDump" column="CLIENT_INFO_DUMP" />
    </resultMap>
    
    <resultMap id="smsTransportResult" class="smsTransportVo" >
		<result property="logId" column="LOG_ID" />          
		<result property="logTimestamp" column="LOG_TIMESTAMP" />   
		<result property="userId" column="USER_ID" />         
		<result property="smsType" column="SMS_TYPE" />        
		<result property="transportType" column="TRANSPORT_TYPE" />  
		<result property="caption" column="CAPTION" />         
		<result property="sender" column="SENDER" />          
		<result property="recipient" column="RECIPIENT" />       
		<result property="message" column="MESSAGE" />         
		<result property="resultCode" column="RESULT_CODE" />  
		<result property="exception" column="EXCEPTION" />   
		<result property="success" column="SUCCESS" />             
    </resultMap>
    	
    <!-- ****************************************************************** -->	
	
    <select id="selectLastLogIdFromApplicationStartUp" resultClass="integer">
  		select LOG_ID from T_STAT_APP_START_UP t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  		
   	<insert id="insertApplicationStartUp" parameterClass="applicationStartUpVo">
  		insert into T_STAT_APP_START_UP (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			VERSION
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#version#
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,  
  			VERSION = #version# 		
  	</insert>  	   	
  	  	      	
	<!-- ****************************************************************** -->
		
	<select id="selectLastLogIdFromUploaderServerStatus" resultClass="integer">
  		select LOG_ID from T_STAT_UPLOADER_SERVER_STATUS t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  		  	  	
  	<insert id="insertUploaderServerStatus" parameterClass="uploaderServerStatusVo">
  		insert into T_STAT_UPLOADER_SERVER_STATUS (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			SERVER_NAME,
  			SERVER_PORT,
  			SERVER_PROTOCOL,
  			STATUS,
  			STARTED,
  			OPT_DO_READ_LINE,
  			OPT_MULTIPLE_RECORDS_PER_RECEPTION,
  			OPT_SOCKET_READ_TIMEOUT_IN_MSECS,
  			OPT_MAX_DATA_STR_LENGTH_IN_BYTES,
  			OPT_CONNECTION_TIMEOUT_IN_MSECS
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#serverName#,
  			#serverPort#,
  			#serverProtocol#,
  			#status#,
  			#started#,
  			#optionDoReadLine#,
  			#optionMultipleRecordsPerReception#,
  			#optionSocketReadTimeoutInMSecs#,
  			#optionMaxDataStrLengthInBytes#,
  			#optionConnectionTimeoutInMSecs#
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,  
  			SERVER_NAME = #serverName#,
  			SERVER_PORT = #serverPort#,
  			SERVER_PROTOCOL = #serverProtocol#,
  			STATUS = #status#,
  			STARTED = #started#,
  			OPT_DO_READ_LINE = #optionDoReadLine#,
  			OPT_MULTIPLE_RECORDS_PER_RECEPTION = #optionMultipleRecordsPerReception#,
  			OPT_SOCKET_READ_TIMEOUT_IN_MSECS = #optionSocketReadTimeoutInMSecs#,
  			OPT_MAX_DATA_STR_LENGTH_IN_BYTES = #optionMaxDataStrLengthInBytes#,
  			OPT_CONNECTION_TIMEOUT_IN_MSECS = #optionConnectionTimeoutInMSecs#		
  	</insert>  	  	 
      	
    <!-- ****************************************************************** -->
      
  	<select id="selectLastLogIdFromUploadedDataProcess" resultClass="integer">
  		select LOG_ID from T_STAT_UPL_DATA_PROC t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  	  	      	
  	<insert id="insertUploadedDataProcess" parameterClass="uploadedDataProcessVo">
  		insert into T_STAT_UPL_DATA_PROC (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			PROTOCOL,
  			REMOTE_IP_ADDRESS,
  			REMOTE_HOST,
  			REMOTE_PORT,
  			SERVER,
  			SERVER_PORT,
  			PROCESSOR,
  			INTERPRETER,
  			INTERPRETER_VERSION,
  			SENDER_ID,
  			ITEM_NUMBER,
  			DATA_STR,  			
  			ADD_INFO, 
  			RESPONSE_STR,
  			CONNECTION_STATUS 			
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#protocol#,
  			#remoteIpAddress#,
  			#remoteHost#,
  			#remotePort#,
  			#server#,
  			#serverPort#,
  			#processor#,
  			#interpreter#,
  			#interpreterVersion#,
  			#senderId#,
  			#itemNumber#,
  			#dataStr#,
  			#addInfo#,
  			#responseStr#,
  			#connectionStatus#  			
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,
  			PROTOCOL = #protocol#,
  			REMOTE_IP_ADDRESS = #remoteIpAddress#,
  			REMOTE_HOST = #remoteHost#,
  			REMOTE_PORT = #remotePort#,
  			SERVER = #server#,
  			SERVER_PORT = #serverPort#,
  			PROCESSOR = #processor#,
  			INTERPRETER = #interpreter#,
  			INTERPRETER_VERSION = #interpreterVersion#,
  			SENDER_ID = #senderId#,
  			ITEM_NUMBER = #itemNumber#,
  			DATA_STR = #dataStr#,	
  			ADD_INFO = #addInfo#,
  			RESPONSE_STR = #responseStr#,
  			CONNECTION_STATUS = #connectionStatus#  		
  	</insert>  	  
  	
  	<!-- ****************************************************************** -->
  	
  	<select id="selectServiceCallCount" parameterClass="java.util.Map" resultClass="integer">
  		select COUNT(*) from T_STAT_SERVICE_CALL t 
  		where 
  			t.SERVICE = #service# AND
  			t.DATE = #date# 	
  	</select>
  	
  	<select id="selectLastLogIdFromServiceCall" resultClass="integer">
  		select LOG_ID from T_STAT_SERVICE_CALL t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  		
   	<insert id="insertServiceCall" parameterClass="serviceCallVo">
  		insert into T_STAT_SERVICE_CALL (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			SERVICE,
  			DATE,
  			URL,
  			RESULT  			
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#service#,
  			#date#,
  			#url#,
  			#result#  			  			
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,
  			SERVICE = #service#,
  			DATE = #date#,
  			URL = #url#,
  			RESULT = #result#   		
  	</insert>  	 
  	  	
  	<!-- ****************************************************************** -->
  	
  	<select id="selectLastLogIdFromStorePositionProcessorInfo" resultClass="integer">
  		select LOG_ID from T_STAT_STORE_POS_PROC_INFO t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  	
  	<insert id="insertStorePositionProcessorInfo" parameterClass="storePositionProcessorInfoVo">
  		insert into T_STAT_STORE_POS_PROC_INFO (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			SENDER_ID,                      
			STARTED,				                 
			UPDATED,                        
			PROCESSED_POSITIONS,            
			SKIPPED_POSITIONS,              
			ERROR_COUNT,                    
			RETRY_COUNT,                    
			MAX_NUMBER_OF_RETRIES_OCCURRED, 
			LAST_ERROR_MSG,                 
			LAST_ERROR_OCCURRED,            
			LAST_STATUS,
			REASON_STOPPED		                 		
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#senderId#, 									
			#started#, 										
			#updated#, 										
			#processedPositions#, 					
			#skippedPositions#, 						
			#errorCount#, 									
			#retryCount#, 									
			#maxNumberOfRetriesOccurred#, 	
			#lastErrorMsg#, 								
			#lastErrorOccurred#, 					
			#lastStatus#,
			#reasonStopped# 						
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,
  			SENDER_ID = #senderId#,                  
			STARTED = #started#,				                 
			UPDATED = #updated#,                   
			PROCESSED_POSITIONS = #processedPositions#,            
			SKIPPED_POSITIONS = #skippedPositions#,       
			ERROR_COUNT = #errorCount#,         
			RETRY_COUNT = #retryCount#,               
			MAX_NUMBER_OF_RETRIES_OCCURRED = #maxNumberOfRetriesOccurred#, 
			LAST_ERROR_MSG = #lastErrorMsg#,
			LAST_ERROR_OCCURRED = #lastErrorOccurred#,            
			LAST_STATUS = #lastStatus#,
			REASON_STOPPED = #reasonStopped#	
  	</insert>  	  

  	<!-- ****************************************************************** -->
  	
  	<select id="selectLastLogIdFromStorePositionProcessorError" resultClass="integer">
  		select LOG_ID from T_STAT_STORE_POS_PROC_ERROR t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  	
  	<insert id="insertStorePositionProcessorError" parameterClass="storePositionProcessorErrorVo">
  		insert into T_STAT_STORE_POS_PROC_ERROR (
  			LOG_ID,
  			LOG_TIMESTAMP,
  			USER_ID,
  			SENDER_ID,
  			POSITION_ID,
  			RETRY,    
  			ERROR,                  
			POSITION_DUMP,
			MOB_NW_CELL_DUMP,
			MESSAGE_DUMP,
			SENDER_STATE_DUMP,
			CARDIAC_FUNCTION_DUMP,
			EMERGENCY_SIGNAL_DUMP,
			CLIENT_INFO_DUMP				                 
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#userId#,
  			#senderId#,
  			#positionId#,
  			#retry#,
  			#error#, 									
			#positionDump#, 										
			#mobNwCellDump#,
			#messageDump#,
			#senderStateDump#,
			#cardiacFunctionDump#,
			#emergencySignalDump#,
			#clientInfoDump#			
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,
  			USER_ID = #userId#,
  			SENDER_ID = #senderId#,
  			POSITION_ID = #positionId#,
			RETRY = #retry#,
			ERROR = #error#,				                 
			POSITION_DUMP = #positionDump#,                   
			MOB_NW_CELL_DUMP = #mobNwCellDump#,
			MESSAGE_DUMP = #messageDump#,
			SENDER_STATE_DUMP = #senderStateDump#,
			CARDIAC_FUNCTION_DUMP = #cardiacFunctionDump#,
			EMERGENCY_SIGNAL_DUMP = #emergencySignalDump#,
			CLIENT_INFO_DUMP = #clientInfoDump#
  	</insert>  	  
  	
  	<!-- ****************************************************************** -->  	

	<select id="selectLastLogIdFromSmsTransport" resultClass="integer">
  		select LOG_ID from T_STAT_SMS_TRANSPORT t 
  		order by LOG_TIMESTAMP desc limit 1 	
  	</select>
  	  	
  	<insert id="insertSmsTransport" parameterClass="smsTransportVo">
  		insert into T_STAT_SMS_TRANSPORT (
  			LOG_ID,        
			LOG_TIMESTAMP, 
			USER_ID,       
			SMS_TYPE,      
			TRANSPORT_TYPE,
			CAPTION,       
			SENDER,        
			RECIPIENT,     
			MESSAGE,      
			RESULT_CODE,
			EXCEPTION,   
			SUCCESS                 	
  		) values (
  			#logId#,
  			#logTimestamp#,
  			#userId#, 			
			#smsType#,			
			#transportType#,
			#caption#,			
			#sender#, 			
			#recipient#,		
			#message#,			
			#resultCode#,
			#exception#,		
			#success#				  			 						
  		) on duplicate key update
  			LOG_TIMESTAMP = #logTimestamp#,
  			USER_ID = #userId#,  
			SMS_TYPE = #smsType#,      
			TRANSPORT_TYPE = #transportType#,
			CAPTION = #caption#,
			SENDER = #sender#,  
			RECIPIENT = #recipient#,   
			MESSAGE = #message#,
			RESULT_CODE = #resultCode#,
			EXCEPTION = #exception#,
			SUCCESS = #success#
  	</insert>
</sqlMap>